import threading

from AMHandler import AMController
from AMTokenGeneration import AMToken


class Pipeline:
	amToken = None
	deezerToken = None
	
	def setTimer(self):
		self.timer = threading.Timer(10.0, self.repeated)
		self.timer.start()

	def __init__(self) -> None:
		self.setTimer()

	def updateTokens(self,amus,deez):
		self.amToken = amus
		self.deezerToken = deez

	def repeated(self):
		print(AMToken.last)
		if AMToken.last is None:
			print("TOKEN SHOULD BE GENERATED BY THIS POINT")
		AMController.getAllLibrarySongs(self.amToken,AMToken.last)
		
		# reenable with reasonable time interval
		# after app is tested
		# self.setTimer()

	def getAppleMusicLibraryList():



		pass

	def getDiff():
		pass

	def addDiffToDeezer():
		pass

	def useDeemixToRetrieveOnServer():
		pass